// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 12.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace Cotemar_CodeUI
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public partial class UIMap
    {
        
        /// <summary>
        /// Hacer Login en Cotemar
        /// </summary>
        public void IngresarCotemar()
        {
            #region Variable Declarations
            HtmlEdit uIEmailEdit = this.UICOTEMARInternetExploWindow.UICOTEMARDocument.UIEmailEdit;
            HtmlEdit uIPasswordEdit = this.UICOTEMARInternetExploWindow.UICOTEMARDocument.UIPasswordEdit;
            HtmlButton uIEntrarButton = this.UICOTEMARInternetExploWindow.UICOTEMARDocument.UIEntrarPane.UIEntrarButton;
            #endregion

            // Type 'admin@test.com' in 'Email' text box
            uIEmailEdit.Text = this.IngresarCotemarParams.UIEmailEditText;

            // Type '{Tab}' in 'Email' text box
            Keyboard.SendKeys(uIEmailEdit, this.IngresarCotemarParams.UIEmailEditSendKeys, ModifierKeys.None);

            // Type '********' in 'Password' text box
            uIPasswordEdit.Password = this.IngresarCotemarParams.UIPasswordEditPassword;

            // Click 'Entrar' button
            Mouse.Click(uIEntrarButton, new Point(152, 31));
        }
        
        /// <summary>
        /// Assert_PanelDeControl - Use 'Assert_PanelDeControlExpectedValues' to pass parameters into this method.
        /// </summary>
        public void Assert_PanelDeControl()
        {
            #region Variable Declarations
            HtmlDiv uIPaneldecontrolPane1 = this.UICOTEMARInternetExploWindow.UICOTEMARDocument1.UIPaneldecontrolPane.UIPaneldecontrolPane1;
            #endregion

            // Verify that the 'InnerText' property of 'Panel de control' pane equals 'Panel de control'
            Assert.AreEqual(this.Assert_PanelDeControlExpectedValues.UIPaneldecontrolPane1InnerText, uIPaneldecontrolPane1.InnerText, "No estas en Panel de Contron");
        }
        
        /// <summary>
        /// Ir a la pestaña de Solicitudes
        /// </summary>
        public void AbrirSolicitudes()
        {
            #region Variable Declarations
            HtmlHyperlink uISolicitudesHyperlink = this.UICOTEMARInternetExploWindow.UICOTEMARDocument1.UISidebarnavPane.UISolicitudesHyperlink;
            #endregion

            // Click 'Solicitudes' link
            Mouse.Click(uISolicitudesHyperlink, new Point(103, 29));
        }
        
        /// <summary>
        /// Comparar Bandeja de Solicitudes
        /// </summary>
        public void Assert_BandejaDeSolicitudes()
        {
            #region Variable Declarations
            HtmlDiv uIBandejadeSolicitudesPane1 = this.UICOTEMARInternetExploWindow.UICOTEMARDocument2.UIBandejadeSolicitudesPane.UIBandejadeSolicitudesPane1;
            #endregion

            // Verify that the 'InnerText' property of 'Bandeja de Solicitudes' pane equals 'Bandeja de Solicitudes'
            Assert.AreEqual(this.Assert_BandejaDeSolicitudesExpectedValues.UIBandejadeSolicitudesPane1InnerText, uIBandejadeSolicitudesPane1.InnerText, "No estas en la pestaña de Solicitudes");
        }
        
        /// <summary>
        /// Ir a Crear Nueva Solicitud
        /// </summary>
        public void AbrirCrearSolicitud()
        {
            #region Variable Declarations
            HtmlButton uINuevaSolicitudButton = this.UICOTEMARInternetExploWindow.UICOTEMARDocument2.UIContentwrapperPane.UINuevaSolicitudButton;
            #endregion

            // Click 'Nueva Solicitud' button
            Mouse.Click(uINuevaSolicitudButton, new Point(37, 24));
        }
        
        /// <summary>
        /// Assert_CrearNuevaSolicitud - Use 'Assert_CrearNuevaSolicitudExpectedValues' to pass parameters into this method.
        /// </summary>
        public void Assert_CrearNuevaSolicitud()
        {
            #region Variable Declarations
            HtmlDiv uICrearNuevaSolicitudPane1 = this.UICOTEMARInternetExploWindow.UICOTEMARDocument3.UICrearNuevaSolicitudPane.UICrearNuevaSolicitudPane1;
            #endregion

            // Verify that the 'InnerText' property of 'Crear Nueva Solicitud' pane equals 'Crear Nueva Solicitud'
            Assert.AreEqual(this.Assert_CrearNuevaSolicitudExpectedValues.UICrearNuevaSolicitudPane1InnerText, uICrearNuevaSolicitudPane1.InnerText, "No estas en crear una nueva solicitud");
        }
        
        /// <summary>
        /// ComprobarEstadoBotonAgregar - Use 'ComprobarEstadoBotonAgregarExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ComprobarEstadoBotonAgregar()
        {
            #region Variable Declarations
            HtmlDiv uIAgregarEspecificacióPane = this.UICOTEMARInternetExploWindow.UICOTEMARDocument3.UIFormNuevaSolicitudCustom.UIAgregarEspecificacióPane;
            #endregion

            // Verify that the 'Exists' property of 'Agregar Especificación de Equipo Incr' pane equals 'True'
            Assert.AreEqual(this.ComprobarEstadoBotonAgregarExpectedValues.UIAgregarEspecificacióPaneExists, uIAgregarEspecificacióPane.Exists, "No existe el boton");

            // Verify that the 'Enabled' property of 'Agregar Especificación de Equipo Incr' pane equals 'True'
            Assert.AreEqual(this.ComprobarEstadoBotonAgregarExpectedValues.UIAgregarEspecificacióPaneEnabled, uIAgregarEspecificacióPane.Enabled, "El boton no funciona");
        }
        
        /// <summary>
        /// Crear Solicitud para abrir incremento de equipo
        /// </summary>
        public void CrearSolicitudIncremento()
        {
            #region Variable Declarations
            HtmlCustom uIItemCustom = this.UICOTEMARInternetExploWindow.UICOTEMARDocument3.UISeleccionauncontratoPane.UIItemCustom;
            HtmlCustom uIItem009028340Custom = this.UICOTEMARInternetExploWindow.UICOTEMARDocument3.UISeleccionauncontratoPane.UIItem009028340Custom;
            HtmlCustom uIItemCustom1 = this.UICOTEMARInternetExploWindow.UICOTEMARDocument3.UICboObra_chosenPane.UIItemCustom;
            HtmlCustom uIExtracciondePetroleoCustom = this.UICOTEMARInternetExploWindow.UICOTEMARDocument3.UICboObra_chosenPane.UIExtracciondePetroleoCustom;
            HtmlButton uIAgregarEspecificacióButton = this.UICOTEMARInternetExploWindow.UICOTEMARDocument3.UIFormNuevaSolicitudCustom.UIAgregarEspecificacióButton;
            HtmlHyperlink uIIncrementoHyperlink = this.UICOTEMARInternetExploWindow.UICOTEMARDocument3.UIFormNuevaSolicitudCustom.UIIncrementoHyperlink;
            #endregion

            // Click custom control
            Mouse.Click(uIItemCustom, new Point(461, 7));

            // Set flag to allow play back to continue if non-essential actions fail. (For example, if a mouse hover action fails.)
            Playback.PlaybackSettings.ContinueOnError = true;

            // Mouse hover  custom control at (1, 1)
            Mouse.Hover(uIItemCustom, new Point(1, 1));

            // Reset flag to ensure that play back stops if there is an error.
            Playback.PlaybackSettings.ContinueOnError = false;

            // Click '009028340' custom control
            Mouse.Click(uIItem009028340Custom, new Point(218, 5));

            // Click custom control
            Mouse.Click(uIItemCustom1, new Point(474, 6));

            // Set flag to allow play back to continue if non-essential actions fail. (For example, if a mouse hover action fails.)
            Playback.PlaybackSettings.ContinueOnError = true;

            // Mouse hover  custom control at (1, 1)
            Mouse.Hover(uIItemCustom1, new Point(1, 1));

            // Reset flag to ensure that play back stops if there is an error.
            Playback.PlaybackSettings.ContinueOnError = false;

            // Click 'Extraccion de Petroleo' custom control
            Mouse.Click(uIExtracciondePetroleoCustom, new Point(130, 16));

            // Click 'Agregar Especificación de Equipo' button
            Mouse.Click(uIAgregarEspecificacióButton, new Point(112, 8));

            // Click 'Incremento' link
            Mouse.Click(uIIncrementoHyperlink, new Point(66, 14));
        }
        
        /// <summary>
        /// comprombar que se encuentra en Incremento de quipo
        /// </summary>
        public void ComprobarIncrementoIncrementoDeEquipo()
        {
            #region Variable Declarations
            HtmlDiv uIIncrementodeEquipoPane = this.UICOTEMARInternetExploWindow.UICOTEMARDocument4.UIModalAgregarEquipoPane.UIIncrementodeEquipoPane;
            #endregion

            // Verify that the 'DisplayText' property of '× Incremento de Equipo' pane contains 'Incremento de Equipo'
            StringAssert.Contains(uIIncrementodeEquipoPane.DisplayText, this.ComprobarIncrementoIncrementoDeEquipoExpectedValues.UIIncrementodeEquipoPaneDisplayText, "no estas en Incremento de Equipo");
        }
        
        /// <summary>
        /// Click en boton agregar para mostrar etiquetas de error
        /// </summary>
        public void MostrarErrorer()
        {
            #region Variable Declarations
            HtmlButton uIAgregaralasolicitudButton = this.UICOTEMARInternetExploWindow.UICOTEMARDocument4.UIFormAgregarEquipoCustom.UIAgregaralasolicitudButton;
            #endregion

            // Click 'Agregar a la solicitud' button
            Mouse.Click(uIAgregaralasolicitudButton, new Point(102, 19));
        }
        
        /// <summary>
        /// Comparar etiqueta de error1
        /// </summary>
        public void EtiquetadeError1()
        {
            #region Variable Declarations
            HtmlSpan uIElequipoesobligatoriPane = this.UICOTEMARInternetExploWindow.UICOTEMARDocument4.UIFormAgregarEquipoCustom1.UIElequipoesobligatoriPane;
            #endregion

            // Verify that the 'DisplayText' property of 'El equipo es obligatorio.' pane equals 'El equipo es obligatorio.'
            Assert.AreEqual(this.EtiquetadeError1ExpectedValues.UIElequipoesobligatoriPaneDisplayText, uIElequipoesobligatoriPane.DisplayText, "NO existe etiqueta");
        }
        
        /// <summary>
        /// Comprobar etiqueta2
        /// </summary>
        public void EtiquetadeError2()
        {
            #region Variable Declarations
            HtmlSpan uILacantidadrequeridaePane = this.UICOTEMARInternetExploWindow.UICOTEMARDocument4.UIFormAgregarEquipoCustom1.UILacantidadrequeridaePane;
            #endregion

            // Verify that the 'InnerText' property of 'La cantidad requerida es obligatoria.' pane equals 'La cantidad requerida es obligatoria.'
            Assert.AreEqual(this.EtiquetadeError2ExpectedValues.UILacantidadrequeridaePaneInnerText, uILacantidadrequeridaePane.InnerText, "NO existe etiqueta");
        }
        
        /// <summary>
        /// Comprobar etiqueta 3
        /// </summary>
        public void EtiquetadeError3()
        {
            #region Variable Declarations
            HtmlSpan uILafechadetérminoesobPane = this.UICOTEMARInternetExploWindow.UICOTEMARDocument4.UIFormAgregarEquipoCustom1.UILafechadetérminoesobPane;
            #endregion

            // Verify that the 'InnerText' property of 'La fecha de término es obligatoria.' pane equals 'La fecha de término es obligatoria.'
            Assert.AreEqual(this.EtiquetadeError3ExpectedValues.UILafechadetérminoesobPaneInnerText, uILafechadetérminoesobPane.InnerText, "NO existe etiqueta");
        }
        
        /// <summary>
        /// Buscar y elegir un Compresor
        /// </summary>
        public void BuscarCom()
        {
            #region Variable Declarations
            HtmlEdit uIValueEdit = this.UICOTEMARInternetExploWindow.UICOTEMARDocument4.UIValueEdit;
            HtmlDiv uICompresorde34DBiPane = this.UICOTEMARInternetExploWindow.UICOTEMARDocument4.UITxtBuscar_dropdownPane.UICompresorde34DBiPane;
            HtmlDiv uICompresorde34DBiPane1 = this.UICOTEMARInternetExploWindow.UICOTEMARDocument4.UITxtBuscar_dropdownPane.UICompresorde34DBiPane1;
            #endregion

            // Type 'Com' in 'value' text box
            uIValueEdit.Text = this.BuscarComParams.UIValueEditText;

            // Set flag to allow play back to continue if non-essential actions fail. (For example, if a mouse hover action fails.)
            Playback.PlaybackSettings.ContinueOnError = true;

            // Mouse hover 'Compresor de 34 DBi' pane at (1, 1)
            Mouse.Hover(uICompresorde34DBiPane, new Point(1, 1));

            // Reset flag to ensure that play back stops if there is an error.
            Playback.PlaybackSettings.ContinueOnError = false;

            // Click 'Compresor de 34 DBi' pane
            Mouse.Click(uICompresorde34DBiPane1, new Point(117, 0));
        }
        
        /// <summary>
        /// Salir y cerrar sesion
        /// </summary>
        public void SalirDeTodo()
        {
            #region Variable Declarations
            HtmlButton uICancelarButton = this.UICOTEMARInternetExploWindow.UICOTEMARDocument4.UICancelarButton;
            HtmlHyperlink uIRegresaraBandejadeSoHyperlink = this.UICOTEMARInternetExploWindow.UICOTEMARDocument4.UIRegresaraBandejadeSoHyperlink;
            HtmlHyperlink uIItemHyperlink = this.UICOTEMARInternetExploWindow.UICOTEMARDocument2.UILogoutFormCustom.UIItemHyperlink;
            #endregion

            // Click 'Cancelar' button
            Mouse.Click(uICancelarButton, new Point(49, 17));

            // Click 'Regresar a Bandeja de Solicitudes' link
            Mouse.Click(uIRegresaraBandejadeSoHyperlink, new Point(112, 8));

            // Click link
            Mouse.Click(uIItemHyperlink, new Point(6, 21));
        }
        
        #region Properties
        public virtual IngresarCotemarParams IngresarCotemarParams
        {
            get
            {
                if ((this.mIngresarCotemarParams == null))
                {
                    this.mIngresarCotemarParams = new IngresarCotemarParams();
                }
                return this.mIngresarCotemarParams;
            }
        }
        
        public virtual Assert_PanelDeControlExpectedValues Assert_PanelDeControlExpectedValues
        {
            get
            {
                if ((this.mAssert_PanelDeControlExpectedValues == null))
                {
                    this.mAssert_PanelDeControlExpectedValues = new Assert_PanelDeControlExpectedValues();
                }
                return this.mAssert_PanelDeControlExpectedValues;
            }
        }
        
        public virtual Assert_BandejaDeSolicitudesExpectedValues Assert_BandejaDeSolicitudesExpectedValues
        {
            get
            {
                if ((this.mAssert_BandejaDeSolicitudesExpectedValues == null))
                {
                    this.mAssert_BandejaDeSolicitudesExpectedValues = new Assert_BandejaDeSolicitudesExpectedValues();
                }
                return this.mAssert_BandejaDeSolicitudesExpectedValues;
            }
        }
        
        public virtual Assert_CrearNuevaSolicitudExpectedValues Assert_CrearNuevaSolicitudExpectedValues
        {
            get
            {
                if ((this.mAssert_CrearNuevaSolicitudExpectedValues == null))
                {
                    this.mAssert_CrearNuevaSolicitudExpectedValues = new Assert_CrearNuevaSolicitudExpectedValues();
                }
                return this.mAssert_CrearNuevaSolicitudExpectedValues;
            }
        }
        
        public virtual ComprobarEstadoBotonAgregarExpectedValues ComprobarEstadoBotonAgregarExpectedValues
        {
            get
            {
                if ((this.mComprobarEstadoBotonAgregarExpectedValues == null))
                {
                    this.mComprobarEstadoBotonAgregarExpectedValues = new ComprobarEstadoBotonAgregarExpectedValues();
                }
                return this.mComprobarEstadoBotonAgregarExpectedValues;
            }
        }
        
        public virtual ComprobarIncrementoIncrementoDeEquipoExpectedValues ComprobarIncrementoIncrementoDeEquipoExpectedValues
        {
            get
            {
                if ((this.mComprobarIncrementoIncrementoDeEquipoExpectedValues == null))
                {
                    this.mComprobarIncrementoIncrementoDeEquipoExpectedValues = new ComprobarIncrementoIncrementoDeEquipoExpectedValues();
                }
                return this.mComprobarIncrementoIncrementoDeEquipoExpectedValues;
            }
        }
        
        public virtual EtiquetadeError1ExpectedValues EtiquetadeError1ExpectedValues
        {
            get
            {
                if ((this.mEtiquetadeError1ExpectedValues == null))
                {
                    this.mEtiquetadeError1ExpectedValues = new EtiquetadeError1ExpectedValues();
                }
                return this.mEtiquetadeError1ExpectedValues;
            }
        }
        
        public virtual EtiquetadeError2ExpectedValues EtiquetadeError2ExpectedValues
        {
            get
            {
                if ((this.mEtiquetadeError2ExpectedValues == null))
                {
                    this.mEtiquetadeError2ExpectedValues = new EtiquetadeError2ExpectedValues();
                }
                return this.mEtiquetadeError2ExpectedValues;
            }
        }
        
        public virtual EtiquetadeError3ExpectedValues EtiquetadeError3ExpectedValues
        {
            get
            {
                if ((this.mEtiquetadeError3ExpectedValues == null))
                {
                    this.mEtiquetadeError3ExpectedValues = new EtiquetadeError3ExpectedValues();
                }
                return this.mEtiquetadeError3ExpectedValues;
            }
        }
        
        public virtual BuscarComParams BuscarComParams
        {
            get
            {
                if ((this.mBuscarComParams == null))
                {
                    this.mBuscarComParams = new BuscarComParams();
                }
                return this.mBuscarComParams;
            }
        }
        
        public UICOTEMARInternetExploWindow UICOTEMARInternetExploWindow
        {
            get
            {
                if ((this.mUICOTEMARInternetExploWindow == null))
                {
                    this.mUICOTEMARInternetExploWindow = new UICOTEMARInternetExploWindow();
                }
                return this.mUICOTEMARInternetExploWindow;
            }
        }
        #endregion
        
        #region Fields
        private IngresarCotemarParams mIngresarCotemarParams;
        
        private Assert_PanelDeControlExpectedValues mAssert_PanelDeControlExpectedValues;
        
        private Assert_BandejaDeSolicitudesExpectedValues mAssert_BandejaDeSolicitudesExpectedValues;
        
        private Assert_CrearNuevaSolicitudExpectedValues mAssert_CrearNuevaSolicitudExpectedValues;
        
        private ComprobarEstadoBotonAgregarExpectedValues mComprobarEstadoBotonAgregarExpectedValues;
        
        private ComprobarIncrementoIncrementoDeEquipoExpectedValues mComprobarIncrementoIncrementoDeEquipoExpectedValues;
        
        private EtiquetadeError1ExpectedValues mEtiquetadeError1ExpectedValues;
        
        private EtiquetadeError2ExpectedValues mEtiquetadeError2ExpectedValues;
        
        private EtiquetadeError3ExpectedValues mEtiquetadeError3ExpectedValues;
        
        private BuscarComParams mBuscarComParams;
        
        private UICOTEMARInternetExploWindow mUICOTEMARInternetExploWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'IngresarCotemar'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class IngresarCotemarParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'admin@test.com' in 'Email' text box
        /// </summary>
        public string UIEmailEditText = "admin@test.com";
        
        /// <summary>
        /// Type '{Tab}' in 'Email' text box
        /// </summary>
        public string UIEmailEditSendKeys = "{Tab}";
        
        /// <summary>
        /// Type '********' in 'Password' text box
        /// </summary>
        public string UIPasswordEditPassword = "tfdHUD9qDmdw2rT8ErNKE0DjU7loMsy/";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'Assert_PanelDeControl'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class Assert_PanelDeControlExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'Panel de control' pane equals 'Panel de control'
        /// </summary>
        public string UIPaneldecontrolPane1InnerText = "Panel de control";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'Assert_BandejaDeSolicitudes'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class Assert_BandejaDeSolicitudesExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'Bandeja de Solicitudes' pane equals 'Bandeja de Solicitudes'
        /// </summary>
        public string UIBandejadeSolicitudesPane1InnerText = "Bandeja de Solicitudes";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'Assert_CrearNuevaSolicitud'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class Assert_CrearNuevaSolicitudExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'Crear Nueva Solicitud' pane equals 'Crear Nueva Solicitud'
        /// </summary>
        public string UICrearNuevaSolicitudPane1InnerText = "Crear Nueva Solicitud";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ComprobarEstadoBotonAgregar'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class ComprobarEstadoBotonAgregarExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Exists' property of 'Agregar Especificación de Equipo Incr' pane equals 'True'
        /// </summary>
        public bool UIAgregarEspecificacióPaneExists = true;
        
        /// <summary>
        /// Verify that the 'Enabled' property of 'Agregar Especificación de Equipo Incr' pane equals 'True'
        /// </summary>
        public bool UIAgregarEspecificacióPaneEnabled = true;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ComprobarIncrementoIncrementoDeEquipo'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class ComprobarIncrementoIncrementoDeEquipoExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'DisplayText' property of '× Incremento de Equipo' pane contains 'Incremento de Equipo'
        /// </summary>
        public string UIIncrementodeEquipoPaneDisplayText = "Incremento de Equipo";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'EtiquetadeError1'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class EtiquetadeError1ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'DisplayText' property of 'El equipo es obligatorio.' pane equals 'El equipo es obligatorio.'
        /// </summary>
        public string UIElequipoesobligatoriPaneDisplayText = "El equipo es obligatorio.";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'EtiquetadeError2'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class EtiquetadeError2ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'La cantidad requerida es obligatoria.' pane equals 'La cantidad requerida es obligatoria.'
        /// </summary>
        public string UILacantidadrequeridaePaneInnerText = "La cantidad requerida es obligatoria.";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'EtiquetadeError3'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class EtiquetadeError3ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'La fecha de término es obligatoria.' pane equals 'La fecha de término es obligatoria.'
        /// </summary>
        public string UILafechadetérminoesobPaneInnerText = "La fecha de término es obligatoria.";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'BuscarCom'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class BuscarComParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'Com' in 'value' text box
        /// </summary>
        public string UIValueEditText = "Com";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UICOTEMARInternetExploWindow : BrowserWindow
    {
        
        public UICOTEMARInternetExploWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "COTEMAR";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("COTEMAR");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UICOTEMARDocument UICOTEMARDocument
        {
            get
            {
                if ((this.mUICOTEMARDocument == null))
                {
                    this.mUICOTEMARDocument = new UICOTEMARDocument(this);
                }
                return this.mUICOTEMARDocument;
            }
        }
        
        public UICOTEMARDocument1 UICOTEMARDocument1
        {
            get
            {
                if ((this.mUICOTEMARDocument1 == null))
                {
                    this.mUICOTEMARDocument1 = new UICOTEMARDocument1(this);
                }
                return this.mUICOTEMARDocument1;
            }
        }
        
        public UICOTEMARDocument2 UICOTEMARDocument2
        {
            get
            {
                if ((this.mUICOTEMARDocument2 == null))
                {
                    this.mUICOTEMARDocument2 = new UICOTEMARDocument2(this);
                }
                return this.mUICOTEMARDocument2;
            }
        }
        
        public UICOTEMARDocument3 UICOTEMARDocument3
        {
            get
            {
                if ((this.mUICOTEMARDocument3 == null))
                {
                    this.mUICOTEMARDocument3 = new UICOTEMARDocument3(this);
                }
                return this.mUICOTEMARDocument3;
            }
        }
        
        public UICOTEMARDocument4 UICOTEMARDocument4
        {
            get
            {
                if ((this.mUICOTEMARDocument4 == null))
                {
                    this.mUICOTEMARDocument4 = new UICOTEMARDocument4(this);
                }
                return this.mUICOTEMARDocument4;
            }
        }
        #endregion
        
        #region Fields
        private UICOTEMARDocument mUICOTEMARDocument;
        
        private UICOTEMARDocument1 mUICOTEMARDocument1;
        
        private UICOTEMARDocument2 mUICOTEMARDocument2;
        
        private UICOTEMARDocument3 mUICOTEMARDocument3;
        
        private UICOTEMARDocument4 mUICOTEMARDocument4;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UICOTEMARDocument : HtmlDocument
    {
        
        public UICOTEMARDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "COTEMAR";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/Account/Login";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://cotemaractivos.scio.local/Account/Login?ReturnUrl=%2f";
            this.WindowTitles.Add("COTEMAR");
            #endregion
        }
        
        #region Properties
        public HtmlEdit UIEmailEdit
        {
            get
            {
                if ((this.mUIEmailEdit == null))
                {
                    this.mUIEmailEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIEmailEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "Email";
                    this.mUIEmailEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "Email";
                    this.mUIEmailEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = null;
                    this.mUIEmailEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIEmailEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIEmailEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "form-control";
                    this.mUIEmailEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"Email\" class=\"form-control\" id=\"Em";
                    this.mUIEmailEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "2";
                    this.mUIEmailEdit.WindowTitles.Add("COTEMAR");
                    #endregion
                }
                return this.mUIEmailEdit;
            }
        }
        
        public HtmlEdit UIPasswordEdit
        {
            get
            {
                if ((this.mUIPasswordEdit == null))
                {
                    this.mUIPasswordEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIPasswordEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "Password";
                    this.mUIPasswordEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "Password";
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = null;
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "PASSWORD";
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "form-control";
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"Password\" class=\"form-control\" id=";
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "3";
                    this.mUIPasswordEdit.WindowTitles.Add("COTEMAR");
                    #endregion
                }
                return this.mUIPasswordEdit;
            }
        }
        
        public UIEntrarPane UIEntrarPane
        {
            get
            {
                if ((this.mUIEntrarPane == null))
                {
                    this.mUIEntrarPane = new UIEntrarPane(this);
                }
                return this.mUIEntrarPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlEdit mUIEmailEdit;
        
        private HtmlEdit mUIPasswordEdit;
        
        private UIEntrarPane mUIEntrarPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIEntrarPane : HtmlDiv
    {
        
        public UIEntrarPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "login-box-inner";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Entrar ";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=\"login-box-inner\"";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "10";
            this.WindowTitles.Add("COTEMAR");
            #endregion
        }
        
        #region Properties
        public HtmlButton UIEntrarButton
        {
            get
            {
                if ((this.mUIEntrarButton == null))
                {
                    this.mUIEntrarButton = new HtmlButton(this);
                    #region Search Criteria
                    this.mUIEntrarButton.SearchProperties[HtmlButton.PropertyNames.Id] = null;
                    this.mUIEntrarButton.SearchProperties[HtmlButton.PropertyNames.Name] = null;
                    this.mUIEntrarButton.SearchProperties[HtmlButton.PropertyNames.DisplayText] = "Entrar";
                    this.mUIEntrarButton.SearchProperties[HtmlButton.PropertyNames.Type] = "submit";
                    this.mUIEntrarButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUIEntrarButton.FilterProperties[HtmlButton.PropertyNames.Class] = "btn btn-success col-xs-12";
                    this.mUIEntrarButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "class=\"btn btn-success col-xs-12\" type=\"";
                    this.mUIEntrarButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "1";
                    this.mUIEntrarButton.WindowTitles.Add("COTEMAR");
                    #endregion
                }
                return this.mUIEntrarButton;
            }
        }
        #endregion
        
        #region Fields
        private HtmlButton mUIEntrarButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UICOTEMARDocument1 : HtmlDocument
    {
        
        public UICOTEMARDocument1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "COTEMAR";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://cotemaractivos.scio.local/";
            this.WindowTitles.Add("COTEMAR");
            #endregion
        }
        
        #region Properties
        public UIPaneldecontrolPane UIPaneldecontrolPane
        {
            get
            {
                if ((this.mUIPaneldecontrolPane == null))
                {
                    this.mUIPaneldecontrolPane = new UIPaneldecontrolPane(this);
                }
                return this.mUIPaneldecontrolPane;
            }
        }
        
        public UISidebarnavPane UISidebarnavPane
        {
            get
            {
                if ((this.mUISidebarnavPane == null))
                {
                    this.mUISidebarnavPane = new UISidebarnavPane(this);
                }
                return this.mUISidebarnavPane;
            }
        }
        #endregion
        
        #region Fields
        private UIPaneldecontrolPane mUIPaneldecontrolPane;
        
        private UISidebarnavPane mUISidebarnavPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPaneldecontrolPane : HtmlDiv
    {
        
        public UIPaneldecontrolPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "content-header";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Panel de control";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = "clearfix";
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"clearfix\" id=\"content-header\"";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "20";
            this.WindowTitles.Add("COTEMAR");
            #endregion
        }
        
        #region Properties
        public HtmlDiv UIPaneldecontrolPane1
        {
            get
            {
                if ((this.mUIPaneldecontrolPane1 == null))
                {
                    this.mUIPaneldecontrolPane1 = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIPaneldecontrolPane1.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIPaneldecontrolPane1.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIPaneldecontrolPane1.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Panel de control";
                    this.mUIPaneldecontrolPane1.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIPaneldecontrolPane1.FilterProperties[HtmlDiv.PropertyNames.Class] = "pull-left";
                    this.mUIPaneldecontrolPane1.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"pull-left\"";
                    this.mUIPaneldecontrolPane1.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "21";
                    this.mUIPaneldecontrolPane1.WindowTitles.Add("COTEMAR");
                    #endregion
                }
                return this.mUIPaneldecontrolPane1;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUIPaneldecontrolPane1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UISidebarnavPane : HtmlDiv
    {
        
        public UISidebarnavPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "sidebar-nav";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Administración \r\n\r\n Panel de control \r\n\r";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = "collapse navbar-collapse navbar-ex1-collapse";
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"collapse navbar-collapse navbar-ex1-collapse\" id=\"sidebar-nav\"";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "12";
            this.WindowTitles.Add("COTEMAR");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UISolicitudesHyperlink
        {
            get
            {
                if ((this.mUISolicitudesHyperlink == null))
                {
                    this.mUISolicitudesHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUISolicitudesHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUISolicitudesHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUISolicitudesHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUISolicitudesHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = " Solicitudes ";
                    this.mUISolicitudesHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/SolicitudEquipo/BandejaEntrada";
                    this.mUISolicitudesHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUISolicitudesHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "http://cotemaractivos.scio.local/SolicitudEquipo/BandejaEntrada";
                    this.mUISolicitudesHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUISolicitudesHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"/SolicitudEquipo/BandejaEntrada\"";
                    this.mUISolicitudesHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "10";
                    this.mUISolicitudesHyperlink.WindowTitles.Add("COTEMAR");
                    #endregion
                }
                return this.mUISolicitudesHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUISolicitudesHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UICOTEMARDocument2 : HtmlDocument
    {
        
        public UICOTEMARDocument2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "COTEMAR";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/SolicitudEquipo/BandejaEntrada";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://cotemaractivos.scio.local/SolicitudEquipo/BandejaEntrada";
            this.WindowTitles.Add("COTEMAR");
            #endregion
        }
        
        #region Properties
        public UIBandejadeSolicitudesPane UIBandejadeSolicitudesPane
        {
            get
            {
                if ((this.mUIBandejadeSolicitudesPane == null))
                {
                    this.mUIBandejadeSolicitudesPane = new UIBandejadeSolicitudesPane(this);
                }
                return this.mUIBandejadeSolicitudesPane;
            }
        }
        
        public UIContentwrapperPane UIContentwrapperPane
        {
            get
            {
                if ((this.mUIContentwrapperPane == null))
                {
                    this.mUIContentwrapperPane = new UIContentwrapperPane(this);
                }
                return this.mUIContentwrapperPane;
            }
        }
        
        public UILogoutFormCustom UILogoutFormCustom
        {
            get
            {
                if ((this.mUILogoutFormCustom == null))
                {
                    this.mUILogoutFormCustom = new UILogoutFormCustom(this);
                }
                return this.mUILogoutFormCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIBandejadeSolicitudesPane mUIBandejadeSolicitudesPane;
        
        private UIContentwrapperPane mUIContentwrapperPane;
        
        private UILogoutFormCustom mUILogoutFormCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIBandejadeSolicitudesPane : HtmlDiv
    {
        
        public UIBandejadeSolicitudesPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "content-header";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Bandeja de Solicitudes";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = "clearfix";
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"clearfix\" id=\"content-header\"";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "19";
            this.WindowTitles.Add("COTEMAR");
            #endregion
        }
        
        #region Properties
        public HtmlDiv UIBandejadeSolicitudesPane1
        {
            get
            {
                if ((this.mUIBandejadeSolicitudesPane1 == null))
                {
                    this.mUIBandejadeSolicitudesPane1 = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIBandejadeSolicitudesPane1.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIBandejadeSolicitudesPane1.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIBandejadeSolicitudesPane1.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Bandeja de Solicitudes";
                    this.mUIBandejadeSolicitudesPane1.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIBandejadeSolicitudesPane1.FilterProperties[HtmlDiv.PropertyNames.Class] = "pull-left";
                    this.mUIBandejadeSolicitudesPane1.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"pull-left\"";
                    this.mUIBandejadeSolicitudesPane1.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "20";
                    this.mUIBandejadeSolicitudesPane1.WindowTitles.Add("COTEMAR");
                    #endregion
                }
                return this.mUIBandejadeSolicitudesPane1;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUIBandejadeSolicitudesPane1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIContentwrapperPane : HtmlDiv
    {
        
        public UIContentwrapperPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "content-wrapper";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Bandeja de Solicitudes\r\n\r\n  \r\n \r\n\r\n Nuev";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=\"content-wrapper\"";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "14";
            this.WindowTitles.Add("COTEMAR");
            #endregion
        }
        
        #region Properties
        public HtmlButton UINuevaSolicitudButton
        {
            get
            {
                if ((this.mUINuevaSolicitudButton == null))
                {
                    this.mUINuevaSolicitudButton = new HtmlButton(this);
                    #region Search Criteria
                    this.mUINuevaSolicitudButton.SearchProperties[HtmlButton.PropertyNames.Id] = null;
                    this.mUINuevaSolicitudButton.SearchProperties[HtmlButton.PropertyNames.Name] = null;
                    this.mUINuevaSolicitudButton.SearchProperties[HtmlButton.PropertyNames.DisplayText] = " Nueva Solicitud ";
                    this.mUINuevaSolicitudButton.SearchProperties[HtmlButton.PropertyNames.Type] = "button";
                    this.mUINuevaSolicitudButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUINuevaSolicitudButton.FilterProperties[HtmlButton.PropertyNames.Class] = "md-trigger btn btn-info btn-lg";
                    this.mUINuevaSolicitudButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "class=\"md-trigger btn btn-info btn-lg\" t";
                    this.mUINuevaSolicitudButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "1";
                    this.mUINuevaSolicitudButton.WindowTitles.Add("COTEMAR");
                    #endregion
                }
                return this.mUINuevaSolicitudButton;
            }
        }
        #endregion
        
        #region Fields
        private HtmlButton mUINuevaSolicitudButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UILogoutFormCustom : HtmlCustom
    {
        
        public UILogoutFormCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties["TagName"] = "FORM";
            this.SearchProperties["Id"] = "logoutForm";
            this.SearchProperties[UITestControl.PropertyNames.Name] = null;
            this.FilterProperties["Class"] = "navbar-right ng-pristine ng-valid";
            this.FilterProperties["ControlDefinition"] = "class=\"navbar-right ng-pristine ng-valid";
            this.FilterProperties["TagInstance"] = "1";
            this.WindowTitles.Add("COTEMAR");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIItemHyperlink
        {
            get
            {
                if ((this.mUIItemHyperlink == null))
                {
                    this.mUIItemHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIItemHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIItemHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIItemHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIItemHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = " ";
                    this.mUIItemHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "document.getElementById(\'logoutForm\').submit()";
                    this.mUIItemHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIItemHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "javascript:document.getElementById(\'logoutForm\').submit()";
                    this.mUIItemHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIItemHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"javascript:document.getElementById";
                    this.mUIItemHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "2";
                    this.mUIItemHyperlink.WindowTitles.Add("COTEMAR");
                    #endregion
                }
                return this.mUIItemHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIItemHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UICOTEMARDocument3 : HtmlDocument
    {
        
        public UICOTEMARDocument3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "COTEMAR";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/SolicitudEquipo/Index";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://cotemaractivos.scio.local/SolicitudEquipo/Index";
            this.WindowTitles.Add("COTEMAR");
            #endregion
        }
        
        #region Properties
        public UICrearNuevaSolicitudPane UICrearNuevaSolicitudPane
        {
            get
            {
                if ((this.mUICrearNuevaSolicitudPane == null))
                {
                    this.mUICrearNuevaSolicitudPane = new UICrearNuevaSolicitudPane(this);
                }
                return this.mUICrearNuevaSolicitudPane;
            }
        }
        
        public UIFormNuevaSolicitudCustom UIFormNuevaSolicitudCustom
        {
            get
            {
                if ((this.mUIFormNuevaSolicitudCustom == null))
                {
                    this.mUIFormNuevaSolicitudCustom = new UIFormNuevaSolicitudCustom(this);
                }
                return this.mUIFormNuevaSolicitudCustom;
            }
        }
        
        public UISeleccionauncontratoPane UISeleccionauncontratoPane
        {
            get
            {
                if ((this.mUISeleccionauncontratoPane == null))
                {
                    this.mUISeleccionauncontratoPane = new UISeleccionauncontratoPane(this);
                }
                return this.mUISeleccionauncontratoPane;
            }
        }
        
        public UICboObra_chosenPane UICboObra_chosenPane
        {
            get
            {
                if ((this.mUICboObra_chosenPane == null))
                {
                    this.mUICboObra_chosenPane = new UICboObra_chosenPane(this);
                }
                return this.mUICboObra_chosenPane;
            }
        }
        #endregion
        
        #region Fields
        private UICrearNuevaSolicitudPane mUICrearNuevaSolicitudPane;
        
        private UIFormNuevaSolicitudCustom mUIFormNuevaSolicitudCustom;
        
        private UISeleccionauncontratoPane mUISeleccionauncontratoPane;
        
        private UICboObra_chosenPane mUICboObra_chosenPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UICrearNuevaSolicitudPane : HtmlDiv
    {
        
        public UICrearNuevaSolicitudPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "content-header";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Crear Nueva Solicitud";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = "clearfix";
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"clearfix\" id=\"content-header\"";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "20";
            this.WindowTitles.Add("COTEMAR");
            #endregion
        }
        
        #region Properties
        public HtmlDiv UICrearNuevaSolicitudPane1
        {
            get
            {
                if ((this.mUICrearNuevaSolicitudPane1 == null))
                {
                    this.mUICrearNuevaSolicitudPane1 = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUICrearNuevaSolicitudPane1.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUICrearNuevaSolicitudPane1.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUICrearNuevaSolicitudPane1.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Crear Nueva Solicitud";
                    this.mUICrearNuevaSolicitudPane1.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUICrearNuevaSolicitudPane1.FilterProperties[HtmlDiv.PropertyNames.Class] = "pull-left";
                    this.mUICrearNuevaSolicitudPane1.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"pull-left\"";
                    this.mUICrearNuevaSolicitudPane1.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "21";
                    this.mUICrearNuevaSolicitudPane1.WindowTitles.Add("COTEMAR");
                    #endregion
                }
                return this.mUICrearNuevaSolicitudPane1;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUICrearNuevaSolicitudPane1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIFormNuevaSolicitudCustom : HtmlCustom
    {
        
        public UIFormNuevaSolicitudCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties["TagName"] = "FORM";
            this.SearchProperties["Id"] = "formNuevaSolicitud";
            this.SearchProperties[UITestControl.PropertyNames.Name] = "formNuevaSolicitud";
            this.FilterProperties["Class"] = "ng-pristine ng-invalid ng-invalid-required ng-valid-pattern ng-valid-maxlength ng" +
                "-valid-min ng-valid-max";
            this.FilterProperties["ControlDefinition"] = "name=\"formNuevaSolicitud\" class=\"ng-pris";
            this.FilterProperties["TagInstance"] = "6";
            this.WindowTitles.Add("COTEMAR");
            #endregion
        }
        
        #region Properties
        public HtmlDiv UIAgregarEspecificacióPane
        {
            get
            {
                if ((this.mUIAgregarEspecificacióPane == null))
                {
                    this.mUIAgregarEspecificacióPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIAgregarEspecificacióPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIAgregarEspecificacióPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIAgregarEspecificacióPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Agregar Especificación de Equipo  \r\nIncr";
                    this.mUIAgregarEspecificacióPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIAgregarEspecificacióPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "btn-group";
                    this.mUIAgregarEspecificacióPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"btn-group\"";
                    this.mUIAgregarEspecificacióPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "194";
                    this.mUIAgregarEspecificacióPane.WindowTitles.Add("COTEMAR");
                    #endregion
                }
                return this.mUIAgregarEspecificacióPane;
            }
        }
        
        public HtmlButton UIAgregarEspecificacióButton
        {
            get
            {
                if ((this.mUIAgregarEspecificacióButton == null))
                {
                    this.mUIAgregarEspecificacióButton = new HtmlButton(this);
                    #region Search Criteria
                    this.mUIAgregarEspecificacióButton.SearchProperties[HtmlButton.PropertyNames.Id] = null;
                    this.mUIAgregarEspecificacióButton.SearchProperties[HtmlButton.PropertyNames.Name] = null;
                    this.mUIAgregarEspecificacióButton.SearchProperties[HtmlButton.PropertyNames.DisplayText] = " Agregar Especificación de Equipo ";
                    this.mUIAgregarEspecificacióButton.SearchProperties[HtmlButton.PropertyNames.Type] = "button";
                    this.mUIAgregarEspecificacióButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUIAgregarEspecificacióButton.FilterProperties[HtmlButton.PropertyNames.Class] = "btn btn-primary dropdown-toggle";
                    this.mUIAgregarEspecificacióButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "class=\"btn btn-primary dropdown-toggle\" ";
                    this.mUIAgregarEspecificacióButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "1";
                    this.mUIAgregarEspecificacióButton.WindowTitles.Add("COTEMAR");
                    #endregion
                }
                return this.mUIAgregarEspecificacióButton;
            }
        }
        
        public HtmlHyperlink UIIncrementoHyperlink
        {
            get
            {
                if ((this.mUIIncrementoHyperlink == null))
                {
                    this.mUIIncrementoHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIIncrementoHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIIncrementoHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIIncrementoHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIIncrementoHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Incremento";
                    this.mUIIncrementoHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/SolicitudEquipo/Index";
                    this.mUIIncrementoHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIIncrementoHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "http://cotemaractivos.scio.local/SolicitudEquipo/Index#";
                    this.mUIIncrementoHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = "md-trigger";
                    this.mUIIncrementoHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "class=\"md-trigger\" href=\"#\" ng-click=\"se";
                    this.mUIIncrementoHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "4";
                    this.mUIIncrementoHyperlink.WindowTitles.Add("COTEMAR");
                    #endregion
                }
                return this.mUIIncrementoHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUIAgregarEspecificacióPane;
        
        private HtmlButton mUIAgregarEspecificacióButton;
        
        private HtmlHyperlink mUIIncrementoHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UISeleccionauncontratoPane : HtmlDiv
    {
        
        public UISeleccionauncontratoPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "cboContrato_chosen";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Selecciona un contrato";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = "chosen-container chosen-container-single";
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "title=\"\" class=\"chosen-container chosen-container-single\" id=\"cboContrato_chosen\"" +
                " style=\"width: 479px;\"";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "169";
            this.WindowTitles.Add("COTEMAR");
            #endregion
        }
        
        #region Properties
        public HtmlCustom UIItemCustom
        {
            get
            {
                if ((this.mUIItemCustom == null))
                {
                    this.mUIItemCustom = new HtmlCustom(this);
                    #region Search Criteria
                    this.mUIItemCustom.SearchProperties["TagName"] = "A";
                    this.mUIItemCustom.SearchProperties["Id"] = null;
                    this.mUIItemCustom.SearchProperties[UITestControl.PropertyNames.Name] = null;
                    this.mUIItemCustom.FilterProperties["Class"] = "chosen-single chosen-default";
                    this.mUIItemCustom.FilterProperties["ControlDefinition"] = "tabindex=\"-1\" class=\"chosen-single chose";
                    this.mUIItemCustom.FilterProperties["TagInstance"] = "1";
                    this.mUIItemCustom.WindowTitles.Add("COTEMAR");
                    #endregion
                }
                return this.mUIItemCustom;
            }
        }
        
        public HtmlCustom UIItem009028340Custom
        {
            get
            {
                if ((this.mUIItem009028340Custom == null))
                {
                    this.mUIItem009028340Custom = new HtmlCustom(this);
                    #region Search Criteria
                    this.mUIItem009028340Custom.SearchProperties["TagName"] = "LI";
                    this.mUIItem009028340Custom.SearchProperties["Id"] = null;
                    this.mUIItem009028340Custom.SearchProperties[UITestControl.PropertyNames.Name] = null;
                    this.mUIItem009028340Custom.FilterProperties["Class"] = "active-result highlighted";
                    this.mUIItem009028340Custom.FilterProperties["ControlDefinition"] = "class=\"active-result highlighted\" data-o";
                    this.mUIItem009028340Custom.FilterProperties["InnerText"] = "009028340";
                    this.mUIItem009028340Custom.FilterProperties["TagInstance"] = "1";
                    this.mUIItem009028340Custom.WindowTitles.Add("COTEMAR");
                    #endregion
                }
                return this.mUIItem009028340Custom;
            }
        }
        #endregion
        
        #region Fields
        private HtmlCustom mUIItemCustom;
        
        private HtmlCustom mUIItem009028340Custom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UICboObra_chosenPane : HtmlDiv
    {
        
        public UICboObra_chosenPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "cboObra_chosen";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "No se encontraron obras para este contra";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = "chosen-container chosen-container-single chosen-disabled";
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "title=\"\" class=\"chosen-container chosen-container-single chosen-disabled\" id=\"cbo" +
                "Obra_chosen\" style=\"width: 479px;\"";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "174";
            this.WindowTitles.Add("COTEMAR");
            #endregion
        }
        
        #region Properties
        public HtmlCustom UIItemCustom
        {
            get
            {
                if ((this.mUIItemCustom == null))
                {
                    this.mUIItemCustom = new HtmlCustom(this);
                    #region Search Criteria
                    this.mUIItemCustom.SearchProperties["TagName"] = "A";
                    this.mUIItemCustom.SearchProperties["Id"] = null;
                    this.mUIItemCustom.SearchProperties[UITestControl.PropertyNames.Name] = null;
                    this.mUIItemCustom.FilterProperties["Class"] = "chosen-single chosen-default";
                    this.mUIItemCustom.FilterProperties["ControlDefinition"] = "tabindex=\"-1\" class=\"chosen-single chose";
                    this.mUIItemCustom.FilterProperties["TagInstance"] = "1";
                    this.mUIItemCustom.WindowTitles.Add("COTEMAR");
                    #endregion
                }
                return this.mUIItemCustom;
            }
        }
        
        public HtmlCustom UIExtracciondePetroleoCustom
        {
            get
            {
                if ((this.mUIExtracciondePetroleoCustom == null))
                {
                    this.mUIExtracciondePetroleoCustom = new HtmlCustom(this);
                    #region Search Criteria
                    this.mUIExtracciondePetroleoCustom.SearchProperties["TagName"] = "LI";
                    this.mUIExtracciondePetroleoCustom.SearchProperties["Id"] = null;
                    this.mUIExtracciondePetroleoCustom.SearchProperties[UITestControl.PropertyNames.Name] = null;
                    this.mUIExtracciondePetroleoCustom.FilterProperties["Class"] = "active-result highlighted";
                    this.mUIExtracciondePetroleoCustom.FilterProperties["ControlDefinition"] = "class=\"active-result highlighted\" data-o";
                    this.mUIExtracciondePetroleoCustom.FilterProperties["InnerText"] = "Extraccion de Petroleo";
                    this.mUIExtracciondePetroleoCustom.FilterProperties["TagInstance"] = "1";
                    this.mUIExtracciondePetroleoCustom.WindowTitles.Add("COTEMAR");
                    #endregion
                }
                return this.mUIExtracciondePetroleoCustom;
            }
        }
        #endregion
        
        #region Fields
        private HtmlCustom mUIItemCustom;
        
        private HtmlCustom mUIExtracciondePetroleoCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UICOTEMARDocument4 : HtmlDocument
    {
        
        public UICOTEMARDocument4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "COTEMAR";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/SolicitudEquipo/Index";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://cotemaractivos.scio.local/SolicitudEquipo/Index#";
            this.WindowTitles.Add("COTEMAR");
            #endregion
        }
        
        #region Properties
        public UIModalAgregarEquipoPane UIModalAgregarEquipoPane
        {
            get
            {
                if ((this.mUIModalAgregarEquipoPane == null))
                {
                    this.mUIModalAgregarEquipoPane = new UIModalAgregarEquipoPane(this);
                }
                return this.mUIModalAgregarEquipoPane;
            }
        }
        
        public UIFormAgregarEquipoCustom UIFormAgregarEquipoCustom
        {
            get
            {
                if ((this.mUIFormAgregarEquipoCustom == null))
                {
                    this.mUIFormAgregarEquipoCustom = new UIFormAgregarEquipoCustom(this);
                }
                return this.mUIFormAgregarEquipoCustom;
            }
        }
        
        public UIFormAgregarEquipoCustom1 UIFormAgregarEquipoCustom1
        {
            get
            {
                if ((this.mUIFormAgregarEquipoCustom1 == null))
                {
                    this.mUIFormAgregarEquipoCustom1 = new UIFormAgregarEquipoCustom1(this);
                }
                return this.mUIFormAgregarEquipoCustom1;
            }
        }
        
        public HtmlEdit UIValueEdit
        {
            get
            {
                if ((this.mUIValueEdit == null))
                {
                    this.mUIValueEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIValueEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "txtBuscar_value";
                    this.mUIValueEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = null;
                    this.mUIValueEdit.SearchProperties[HtmlEdit.PropertyNames.LabeledBy] = null;
                    this.mUIValueEdit.SearchProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIValueEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIValueEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "form-control ng-valid-maxlength ng-pristine";
                    this.mUIValueEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "class=\"form-control ng-valid-maxlength n";
                    this.mUIValueEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "3";
                    this.mUIValueEdit.WindowTitles.Add("COTEMAR");
                    #endregion
                }
                return this.mUIValueEdit;
            }
        }
        
        public UITxtBuscar_dropdownPane UITxtBuscar_dropdownPane
        {
            get
            {
                if ((this.mUITxtBuscar_dropdownPane == null))
                {
                    this.mUITxtBuscar_dropdownPane = new UITxtBuscar_dropdownPane(this);
                }
                return this.mUITxtBuscar_dropdownPane;
            }
        }
        
        public UIFormAgregarEquipoCustom2 UIFormAgregarEquipoCustom2
        {
            get
            {
                if ((this.mUIFormAgregarEquipoCustom2 == null))
                {
                    this.mUIFormAgregarEquipoCustom2 = new UIFormAgregarEquipoCustom2(this);
                }
                return this.mUIFormAgregarEquipoCustom2;
            }
        }
        
        public HtmlButton UICancelarButton
        {
            get
            {
                if ((this.mUICancelarButton == null))
                {
                    this.mUICancelarButton = new HtmlButton(this);
                    #region Search Criteria
                    this.mUICancelarButton.SearchProperties[HtmlButton.PropertyNames.Id] = "btnCloseIncrementoEquipo";
                    this.mUICancelarButton.SearchProperties[HtmlButton.PropertyNames.Name] = null;
                    this.mUICancelarButton.SearchProperties[HtmlButton.PropertyNames.DisplayText] = "Cancelar";
                    this.mUICancelarButton.SearchProperties[HtmlButton.PropertyNames.Type] = "button";
                    this.mUICancelarButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUICancelarButton.FilterProperties[HtmlButton.PropertyNames.Class] = "btn btn-danger md-close";
                    this.mUICancelarButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "class=\"btn btn-danger md-close\" id=\"btnC";
                    this.mUICancelarButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "11";
                    this.mUICancelarButton.WindowTitles.Add("COTEMAR");
                    #endregion
                }
                return this.mUICancelarButton;
            }
        }
        
        public HtmlHyperlink UIRegresaraBandejadeSoHyperlink
        {
            get
            {
                if ((this.mUIRegresaraBandejadeSoHyperlink == null))
                {
                    this.mUIRegresaraBandejadeSoHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIRegresaraBandejadeSoHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = "linkBackBandeja";
                    this.mUIRegresaraBandejadeSoHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIRegresaraBandejadeSoHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIRegresaraBandejadeSoHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = " Regresar a Bandeja de Solicitudes";
                    this.mUIRegresaraBandejadeSoHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/SolicitudEquipo/BandejaEntrada";
                    this.mUIRegresaraBandejadeSoHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIRegresaraBandejadeSoHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "http://cotemaractivos.scio.local/SolicitudEquipo/BandejaEntrada";
                    this.mUIRegresaraBandejadeSoHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIRegresaraBandejadeSoHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "id=\"linkBackBandeja\" href=\"/SolicitudEqu";
                    this.mUIRegresaraBandejadeSoHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "20";
                    this.mUIRegresaraBandejadeSoHyperlink.WindowTitles.Add("COTEMAR");
                    #endregion
                }
                return this.mUIRegresaraBandejadeSoHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private UIModalAgregarEquipoPane mUIModalAgregarEquipoPane;
        
        private UIFormAgregarEquipoCustom mUIFormAgregarEquipoCustom;
        
        private UIFormAgregarEquipoCustom1 mUIFormAgregarEquipoCustom1;
        
        private HtmlEdit mUIValueEdit;
        
        private UITxtBuscar_dropdownPane mUITxtBuscar_dropdownPane;
        
        private UIFormAgregarEquipoCustom2 mUIFormAgregarEquipoCustom2;
        
        private HtmlButton mUICancelarButton;
        
        private HtmlHyperlink mUIRegresaraBandejadeSoHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIModalAgregarEquipoPane : HtmlDiv
    {
        
        public UIModalAgregarEquipoPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "modalAgregarEquipo";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "× \r\nIncremento de Equipo\r\n\r\n\r\n\r\n\r\n\r\n\r\nPa";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = "md-modal md-effect-1 md-show";
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"md-modal md-effect-1 md-show\" id=\"modalAgregarEquipo\"";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "66";
            this.WindowTitles.Add("COTEMAR");
            #endregion
        }
        
        #region Properties
        public HtmlDiv UIIncrementodeEquipoPane
        {
            get
            {
                if ((this.mUIIncrementodeEquipoPane == null))
                {
                    this.mUIIncrementodeEquipoPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIIncrementodeEquipoPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIIncrementodeEquipoPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIIncrementodeEquipoPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "× \r\nIncremento de Equipo";
                    this.mUIIncrementodeEquipoPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIIncrementodeEquipoPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "modal-header";
                    this.mUIIncrementodeEquipoPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"modal-header\"";
                    this.mUIIncrementodeEquipoPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "68";
                    this.mUIIncrementodeEquipoPane.WindowTitles.Add("COTEMAR");
                    #endregion
                }
                return this.mUIIncrementodeEquipoPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUIIncrementodeEquipoPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIFormAgregarEquipoCustom : HtmlCustom
    {
        
        public UIFormAgregarEquipoCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties["TagName"] = "FORM";
            this.SearchProperties["Id"] = "formAgregarEquipo";
            this.SearchProperties[UITestControl.PropertyNames.Name] = "formAgregarEquipo";
            this.FilterProperties["Class"] = "ng-pristine ng-valid-min ng-invalid ng-invalid-required ng-valid-pattern ng-valid" +
                "-maxlength";
            this.FilterProperties["ControlDefinition"] = "name=\"formAgregarEquipo\" class=\"ng-prist";
            this.FilterProperties["TagInstance"] = "2";
            this.WindowTitles.Add("COTEMAR");
            #endregion
        }
        
        #region Properties
        public HtmlButton UIAgregaralasolicitudButton
        {
            get
            {
                if ((this.mUIAgregaralasolicitudButton == null))
                {
                    this.mUIAgregaralasolicitudButton = new HtmlButton(this);
                    #region Search Criteria
                    this.mUIAgregaralasolicitudButton.SearchProperties[HtmlButton.PropertyNames.Id] = null;
                    this.mUIAgregaralasolicitudButton.SearchProperties[HtmlButton.PropertyNames.Name] = null;
                    this.mUIAgregaralasolicitudButton.SearchProperties[HtmlButton.PropertyNames.DisplayText] = "Agregar a la solicitud";
                    this.mUIAgregaralasolicitudButton.SearchProperties[HtmlButton.PropertyNames.Type] = "submit";
                    this.mUIAgregaralasolicitudButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUIAgregaralasolicitudButton.FilterProperties[HtmlButton.PropertyNames.Class] = "btn btn-info";
                    this.mUIAgregaralasolicitudButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "class=\"btn btn-info\" type=\"submit\" ng-=\"";
                    this.mUIAgregaralasolicitudButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "1";
                    this.mUIAgregaralasolicitudButton.WindowTitles.Add("COTEMAR");
                    #endregion
                }
                return this.mUIAgregaralasolicitudButton;
            }
        }
        #endregion
        
        #region Fields
        private HtmlButton mUIAgregaralasolicitudButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIFormAgregarEquipoCustom1 : HtmlCustom
    {
        
        public UIFormAgregarEquipoCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties["TagName"] = "FORM";
            this.SearchProperties["Id"] = "formAgregarEquipo";
            this.SearchProperties[UITestControl.PropertyNames.Name] = "formAgregarEquipo";
            this.FilterProperties["Class"] = "ng-pristine ng-valid-min ng-invalid ng-invalid-required ng-valid-pattern ng-valid" +
                "-maxlength ng-submitted";
            this.FilterProperties["ControlDefinition"] = "name=\"formAgregarEquipo\" class=\"ng-prist";
            this.FilterProperties["TagInstance"] = "2";
            this.WindowTitles.Add("COTEMAR");
            #endregion
        }
        
        #region Properties
        public HtmlSpan UIElequipoesobligatoriPane
        {
            get
            {
                if ((this.mUIElequipoesobligatoriPane == null))
                {
                    this.mUIElequipoesobligatoriPane = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUIElequipoesobligatoriPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIElequipoesobligatoriPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIElequipoesobligatoriPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "El equipo es obligatorio.";
                    this.mUIElequipoesobligatoriPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIElequipoesobligatoriPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "text-danger";
                    this.mUIElequipoesobligatoriPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"text-danger\" ng-show=\"hasErrorAgregarForm(\'buscar\',\'required\')\"";
                    this.mUIElequipoesobligatoriPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "18";
                    this.mUIElequipoesobligatoriPane.WindowTitles.Add("COTEMAR");
                    #endregion
                }
                return this.mUIElequipoesobligatoriPane;
            }
        }
        
        public HtmlSpan UILacantidadrequeridaePane
        {
            get
            {
                if ((this.mUILacantidadrequeridaePane == null))
                {
                    this.mUILacantidadrequeridaePane = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUILacantidadrequeridaePane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUILacantidadrequeridaePane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUILacantidadrequeridaePane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "La cantidad requerida es obligatoria.";
                    this.mUILacantidadrequeridaePane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUILacantidadrequeridaePane.FilterProperties[HtmlDiv.PropertyNames.Class] = "text-danger";
                    this.mUILacantidadrequeridaePane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"text-danger\" ng-show=\"hasErrorAgregarForm(\'cantidadRequerida\',\'required\')\"" +
                        "";
                    this.mUILacantidadrequeridaePane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "19";
                    this.mUILacantidadrequeridaePane.WindowTitles.Add("COTEMAR");
                    #endregion
                }
                return this.mUILacantidadrequeridaePane;
            }
        }
        
        public HtmlSpan UILafechadetérminoesobPane
        {
            get
            {
                if ((this.mUILafechadetérminoesobPane == null))
                {
                    this.mUILafechadetérminoesobPane = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUILafechadetérminoesobPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUILafechadetérminoesobPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUILafechadetérminoesobPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "La fecha de término es obligatoria.";
                    this.mUILafechadetérminoesobPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUILafechadetérminoesobPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "text-danger";
                    this.mUILafechadetérminoesobPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"text-danger\" ng-show=\"hasErrorAgregarForm(\'fechaTermino\',\'required\')\"";
                    this.mUILafechadetérminoesobPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "21";
                    this.mUILafechadetérminoesobPane.WindowTitles.Add("COTEMAR");
                    #endregion
                }
                return this.mUILafechadetérminoesobPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlSpan mUIElequipoesobligatoriPane;
        
        private HtmlSpan mUILacantidadrequeridaePane;
        
        private HtmlSpan mUILafechadetérminoesobPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UITxtBuscar_dropdownPane : HtmlDiv
    {
        
        public UITxtBuscar_dropdownPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "txtBuscar_dropdown";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Buscando...\r\n\r\nNo se encontraron resulta";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = "angucomplete-dropdown";
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"angucomplete-dropdown\" id=\"txtBuscar_dropdown\" ng-show=\"showDropdown\"";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "87";
            this.WindowTitles.Add("COTEMAR");
            #endregion
        }
        
        #region Properties
        public HtmlDiv UICompresorde34DBiPane
        {
            get
            {
                if ((this.mUICompresorde34DBiPane == null))
                {
                    this.mUICompresorde34DBiPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUICompresorde34DBiPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUICompresorde34DBiPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUICompresorde34DBiPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Compresor de 34 DBi\r\n   ";
                    this.mUICompresorde34DBiPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUICompresorde34DBiPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "angucomplete-row ng-scope";
                    this.mUICompresorde34DBiPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"angucomplete-row ng-scope\" ng-repeat=\"result in results\" ng-click=\"selectR" +
                        "esult(result)\" ng-class=\"{\'angucomplete-selected-row\': $index == currentIndex}\" " +
                        "ng-mouseenter=\"hoverRow($index)\"";
                    this.mUICompresorde34DBiPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "90";
                    this.mUICompresorde34DBiPane.WindowTitles.Add("COTEMAR");
                    #endregion
                }
                return this.mUICompresorde34DBiPane;
            }
        }
        
        public HtmlDiv UICompresorde34DBiPane1
        {
            get
            {
                if ((this.mUICompresorde34DBiPane1 == null))
                {
                    this.mUICompresorde34DBiPane1 = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUICompresorde34DBiPane1.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUICompresorde34DBiPane1.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUICompresorde34DBiPane1.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Compresor de 34 DBi";
                    this.mUICompresorde34DBiPane1.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUICompresorde34DBiPane1.FilterProperties[HtmlDiv.PropertyNames.Class] = "angucomplete-title ng-binding ng-scope";
                    this.mUICompresorde34DBiPane1.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"angucomplete-title ng-binding ng-scope\" ng-if=\"!matchClass\"";
                    this.mUICompresorde34DBiPane1.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "91";
                    this.mUICompresorde34DBiPane1.WindowTitles.Add("COTEMAR");
                    #endregion
                }
                return this.mUICompresorde34DBiPane1;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUICompresorde34DBiPane;
        
        private HtmlDiv mUICompresorde34DBiPane1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIFormAgregarEquipoCustom2 : HtmlCustom
    {
        
        public UIFormAgregarEquipoCustom2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties["TagName"] = "FORM";
            this.SearchProperties["Id"] = "formAgregarEquipo";
            this.SearchProperties[UITestControl.PropertyNames.Name] = "formAgregarEquipo";
            this.FilterProperties["Class"] = "ng-valid-min ng-invalid ng-invalid-required ng-valid-pattern ng-valid-maxlength n" +
                "g-submitted ng-dirty";
            this.FilterProperties["ControlDefinition"] = "name=\"formAgregarEquipo\" class=\"ng-valid";
            this.FilterProperties["TagInstance"] = "2";
            this.WindowTitles.Add("COTEMAR");
            #endregion
        }
        
        #region Properties
        public HtmlDiv UIElequipoesobligatoriPane
        {
            get
            {
                if ((this.mUIElequipoesobligatoriPane == null))
                {
                    this.mUIElequipoesobligatoriPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIElequipoesobligatoriPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIElequipoesobligatoriPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIElequipoesobligatoriPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "El equipo es obligatorio. \r\nEquipo solic";
                    this.mUIElequipoesobligatoriPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIElequipoesobligatoriPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "form-group";
                    this.mUIElequipoesobligatoriPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"form-group\"";
                    this.mUIElequipoesobligatoriPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "90";
                    this.mUIElequipoesobligatoriPane.WindowTitles.Add("COTEMAR");
                    #endregion
                }
                return this.mUIElequipoesobligatoriPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUIElequipoesobligatoriPane;
        #endregion
    }
}
